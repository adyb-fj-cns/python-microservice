global-variables:
  environment: &default_environment
    KUBERNETES_SERVER: 
      from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    KUBERNETES_USER: default
    KUBERNETES_NAMESPACE: default
    KUBERNETES_CLUSTER: default

kind: pipeline
type: kubernetes
name: default

steps:

- name: test
  image: python
  commands:
  - pip install -r requirements.txt
  - pytest

- name: publish 
  image: plugins/docker
  settings:
    username: adybfjcns
    password:
      from_secret: docker_password
    repo: adybfjcns/python-microservice
    tags: [ "${DRONE_COMMIT_SHA:0:7}","latest" ]

- name: scan
  image: jmccann/drone-clair:1
  settings:
    url: http://104.248.166.93:30060
    username: adybfjcns
    password:
      from_secret: docker_password
    scan_image: adybfjcns/python-microservice:${DRONE_COMMIT_SHA:0:7}

- name: deploy
  image: adybfjcns/drone-k8-deploy
  environment:
    <<: *default_environment
  commands:
  - kubectl config set-credentials $KUBERNETES_CLUSTER --token=$KUBERNETES_TOKEN
  - kubectl config set-credentials $KUBERNETES_CLUSTER --token=$KUBERNETES_TOKEN
  - kubectl config set clusters.$KUBERNETES_CLUSTER.certificate-authority-data $KUBERNETES_CERT
  - kubectl config set clusters.$KUBERNETES_CLUSTER.server $KUBERNETES_SERVER
  - kubectl config set-context $KUBERNETES_CLUSTER --cluster=$KUBERNETES_CLUSTER --user=$KUBERNETES_USER
  - kubectl config use-context $KUBERNETES_CLUSTER
  - kubectl get nodes
  - export DOCKER_TAG=${DRONE_COMMIT_SHA:0:7}
  - cat k8s.yml | envsubst | kubectl apply -f -